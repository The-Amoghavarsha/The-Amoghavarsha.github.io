<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fuzzing on Amoghavarsha</title>
    <link>https://amoghavarsha.in/tags/fuzzing/</link>
    <description>Recent content in fuzzing on Amoghavarsha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Jul 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://amoghavarsha.in/tags/fuzzing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fuzzing With Good Old Radamsa</title>
      <link>https://amoghavarsha.in/posts/radamsa/radamsa/</link>
      <pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://amoghavarsha.in/posts/radamsa/radamsa/</guid>
      <description>&amp;ldquo;1337051nT&amp;rdquo;&#xA;&amp;ldquo;S3rlockedOSINTForall&amp;rdquo;&#xA;&amp;ldquo;oS$INTFOR@LL&amp;rdquo;&#xA;Did you know that Osint For All has many secret domain names? Just kidding, I don’t want to fuzz around any further, or maybe I do? So let’s jump in to the world of Radamsa.&#xA;Radamsa is a fuzzer. In technical terms, it is a test case generator for robustness testing. Typically, it is used to test how well a program could tolerate potentially malicious input. It works by reading files of valid data and generating random outputs every time from them.</description>
    </item>
  </channel>
</rss>
